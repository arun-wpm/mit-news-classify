"""
Created on Tuesday June 2 2020 17:28 +0700

@author: arunwpm
"""
import csv
import math

def loadcsv(filename):
    with open(filename, newline='') as f: 
        return list(csv.reader(f))

def savecsv(filename, list):
    with open(filename, "w", newline="") as f:
        csv.writer(f).writerows(list)

NUM_KEYWORDS = 10

if __name__ == "__main__":
    ldloc = 'labels_dict.csv' #name of the labels dictionary generated by nb.py (should be labels_dict.csv)
    id2tagloc = 'nyt-theme-tags.csv' #name of the conversion table from tag id to tag name for NYTcorpus
    probloc = 'prob.csv' #name of the saved probabilities from the naive bayes model
    vocabloc = 'vocab.csv' #name of the saved vocabulary dictionary from the tf idf transformation

    ld = loadcsv(ldloc)
    id2tag_table = loadcsv(id2tagloc)
    id2tag = {}
    for row in id2tag_table:
        if row == []:
            continue
        id2tag[row[1]] = row[2]
    prob = loadcsv(probloc)
    vocab_table = loadcsv(vocabloc)
    vocab = {}
    for row in vocab_table:
        vocab[int(row[1])] = row[0]
    
    out = []
    for i in range(1, len(prob), 2):
        if (i//2 >= len(ld)):
            break
        out.append([id2tag[ld[i//2][1]]])
        ranked = [("",-math.inf)]*NUM_KEYWORDS
        for j in range(len(prob[i])):
            if j not in vocab:
                continue
            tup = (vocab[j],float(prob[i][j]))
            for k in range(NUM_KEYWORDS):
                if tup[1] > ranked[k][1]:
                    ranked = ranked[:k] + [tup] + ranked[k:-1]
                    break
        out[-1].extend(ranked[:])
    
    savecsv("keywords.csv", out)